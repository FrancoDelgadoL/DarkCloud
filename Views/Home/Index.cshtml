@model DarkCloud.Models.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Usuario> SignInManager
@using DarkCloud.Models
@{
    var frases = Model.Frases;
    var imagenesList = Model.ImagenesCarruselBase64;
    var duracion = Model.DuracionCarruselMs;
    var titulo = Model.Titulo;
    var textoBoton = Model.TextoBoton;
    var enlaceBoton = Model.EnlaceBoton;
    var mensajeBanner = Model.MensajeBanner;
    var busqueda = ViewData["Busqueda"] as string;
}
@if (((frases != null && frases.Count > 0) || (imagenesList != null && imagenesList.Count > 0))) {
<header class="hero-section text-white py-5">
  <div class="container d-flex align-items-center justify-content-between flex-wrap flex-md-nowrap" style="min-height: 50vh;">
    <div class="hero-text text-start" style="flex:1; min-width:260px; max-width:500px;">
      <h1 class="display-4 fw-bold">@titulo</h1>
      <div id="hero-carousel" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
          @if (frases != null) {
            @for (int i = 0; i < frases.Count; i++) {
              <div class="carousel-item @(i == 0 ? "active" : "")">
                <p class="lead">@frases[i]</p>
              </div>
            }
          }
        </div>
      </div>
      <a href="@enlaceBoton" class="btn btn-primary btn-lg mt-3">@textoBoton</a>
    </div>
    <div class="hero-bg-carousel" style="flex:1; min-width:260px; max-width:600px; height:350px; position:relative;">
      @if (imagenesList != null) {
        for (int i = 0; i < imagenesList.Count; i++) {
          <div class="bg-image@(i == 0 ? " active" : "")" style="background-image:url('@imagenesList[i]');"></div>
        }
      }
    </div>
  </div>
</header>
<div class="container mt-5">
  <div class="alert alert-info text-center" role="alert">
    @mensajeBanner
  </div>
</div>
}

<!-- BUSCADOR PRINCIPAL -->
<div class="container mt-5">
  <form method="get" action="/" class="row justify-content-center mb-4 g-2">
    <div class="col-12 col-md-8 col-lg-6">
      <div class="input-group input-group-lg shadow rounded-4 overflow-hidden">
        <input type="text" name="q" class="form-control border-primary bg-white text-dark" placeholder="Buscar juegos, consolas, accesorios..." value="@busqueda" aria-label="Buscar productos" style="font-size:1.2rem;">
        <button class="btn btn-primary px-4" type="submit"><i class="fas fa-search me-1"></i>Buscar</button>
      </div>
    </div>
  </form>
</div>
<!-- FIN BUSCADOR PRINCIPAL -->

<!-- NOVEDADES -->
<div class="container mt-5">
  <h2 class="text-center mb-4">Novedades</h2>
  <div class="row">
    @foreach (var producto in Model.Productos.OrderByDescending(p => p.Id).Take(4))
    {
      var tieneOfertaValida = producto.EsOferta && producto.Descuento.HasValue && producto.PrecioReal.HasValue && producto.PrecioReal > 0 && producto.Descuento > 0 && producto.Precio > 0 && producto.Precio < producto.PrecioReal && producto.OfertaFin.HasValue && producto.OfertaFin.Value > DateTime.UtcNow;
      <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
        <div class="card h-100 shadow-sm border-primary bg-white">
          <img src="@((producto.ImagenPrincipal != null && producto.ImagenPrincipalMimeType != null) ? $"data:{producto.ImagenPrincipalMimeType};base64,{Convert.ToBase64String(producto.ImagenPrincipal)}" : (producto.ImagenUrl ?? "/images/no-image.png"))" class="card-img-top" alt="@producto.Nombre" style="background:#f5f5f5; object-fit:contain; max-height:220px;">
          <div class="card-body d-flex flex-column">
            <h5 class="card-title text-primary fw-bold">@producto.Nombre</h5>
            <p class="card-text text-dark truncate-description" data-fulltext="@producto.Descripcion">@producto.Descripcion</p>
            <a href="@Url.Action("Producto", "Home", new { id = producto.Id })" class="btn-leer-mas-link @(producto.Descripcion != null && producto.Descripcion.Length > 120 ? "d-inline" : "d-none")">Leer más</a>
            @if (tieneOfertaValida && producto.Descuento.HasValue && producto.PrecioReal.HasValue)
            {
                <p class="card-text text-danger fw-bold fs-5">
                    <span>-@producto.Descuento.Value.ToString("0")% S/ @producto.Precio.ToString("0.00")</span>
                </p>
                <p class="card-text text-muted"><s>S/ @producto.PrecioReal.Value.ToString("0.00")</s></p>
                <span class="badge bg-danger mb-2">Oferta</span>
            }
            else if (producto.Precio > 0)
            {
                <p class="card-text fw-bold text-success fs-5">S/ @producto.Precio.ToString("0.00")</p>
                @if (producto.EsOferta) { <span class="badge bg-danger mb-2">Oferta</span> }
            }
            else if (producto.PrecioReal.HasValue && producto.PrecioReal.Value > 0)
            {
                <p class="card-text fw-bold text-success fs-5">S/ @producto.PrecioReal.Value.ToString("0.00")</p>
            }
            <button type="button" class="btn btn-primary mt-auto fw-bold btn-go-product" data-id="@producto.Id">Añadir al carrito</button>
          </div>
        </div>
      </div>
    }
  </div>
</div>

<!-- OFERTAS DESTACADAS -->
<div class="container mt-5">
  <h2 class="text-center mb-4">Ofertas Destacadas</h2>
  <div class="row">
    @foreach (var producto in Model.Productos.Where(p => p.EsOferta))
    {
      var tieneOfertaValida = producto.EsOferta && producto.Descuento.HasValue && producto.PrecioReal.HasValue && producto.PrecioReal > 0 && producto.Descuento > 0 && producto.Precio > 0 && producto.Precio < producto.PrecioReal && producto.OfertaFin.HasValue && producto.OfertaFin.Value > DateTime.UtcNow;
      <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
        <div class="card h-100 shadow-sm border-danger bg-white">
          <img src="@((producto.ImagenPrincipal != null && producto.ImagenPrincipalMimeType != null) ? $"data:{producto.ImagenPrincipalMimeType};base64,{Convert.ToBase64String(producto.ImagenPrincipal)}" : (producto.ImagenUrl ?? "/images/no-image.png"))" class="card-img-top" alt="@producto.Nombre" style="background:#f5f5f5; object-fit:contain; max-height:220px;">
          <div class="card-body d-flex flex-column">
            <h5 class="card-title text-danger fw-bold">@producto.Nombre</h5>
            <p class="card-text text-dark truncate-description" data-fulltext="@producto.Descripcion">@producto.Descripcion</p>
            <a href="@Url.Action("Producto", "Home", new { id = producto.Id })" class="btn-leer-mas-link @(producto.Descripcion != null && producto.Descripcion.Length > 120 ? "d-inline" : "d-none")">Leer más</a>
            @if (tieneOfertaValida && producto.Descuento.HasValue && producto.PrecioReal.HasValue)
            {
                <p class="card-text text-danger fw-bold fs-5">
                    <span>-@producto.Descuento.Value.ToString("0")% S/ @producto.Precio.ToString("0.00")</span>
                </p>
                <p class="card-text text-muted"><s>S/ @producto.PrecioReal.Value.ToString("0.00")</s></p>
                <span class="badge bg-danger mb-2">Oferta</span>
            }
            else if (producto.Precio > 0)
            {
                <p class="card-text fw-bold text-success fs-5">S/ @producto.Precio.ToString("0.00")</p>
                @if (producto.EsOferta) { <span class="badge bg-danger mb-2">Oferta</span> }
            }
            else if (producto.PrecioReal.HasValue && producto.PrecioReal.Value > 0)
            {
                <p class="card-text fw-bold text-success fs-5">S/ @producto.PrecioReal.Value.ToString("0.00")</p>
            }
            <button type="button" class="btn btn-primary mt-auto fw-bold btn-go-product" data-id="@producto.Id">Añadir al carrito</button>
          </div>
        </div>
      </div>
    }
  </div>
</div>

<!-- FILTROS GAMER AVANZADOS -->
<div class="container mt-5">
  <h2 class="text-center mb-4">Filtrar productos</h2>
  <div class="row justify-content-center mb-4 g-2">
    <!-- Géneros -->
    <div class="col-auto">
      <div class="btn-group" role="group">
        <a href="@Url.Action("Catalogo", new { genero = "Acción", plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroGenero"] as string == "Acción" ? "active fw-bold" : "")"><i class="fas fa-fist-raised me-1"></i>Acción</a>
        <a href="@Url.Action("Catalogo", new { genero = "Aventura", plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroGenero"] as string == "Aventura" ? "active fw-bold" : "")"><i class="fas fa-hat-wizard me-1"></i>Aventura</a>
        <a href="@Url.Action("Catalogo", new { genero = "Deportes", plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroGenero"] as string == "Deportes" ? "active fw-bold" : "")"><i class="fas fa-futbol me-1"></i>Deportes</a>
        <a href="@Url.Action("Catalogo", new { genero = "RPG", plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroGenero"] as string == "RPG" ? "active fw-bold" : "")"><i class="fas fa-dice-d20 me-1"></i>RPG</a>
        <a href="@Url.Action("Catalogo", new { genero = "Estrategia", plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroGenero"] as string == "Estrategia" ? "active fw-bold" : "")"><i class="fas fa-chess me-1"></i>Estrategia</a>
        <a href="@Url.Action("Catalogo", new { genero = "Simulación", plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroGenero"] as string == "Simulación" ? "active fw-bold" : "")"><i class="fas fa-cogs me-1"></i>Simulación</a>
      </div>
    </div>
    <!-- Plataformas -->
    <div class="col-auto">
      <div class="btn-group" role="group">
        <a href="@Url.Action("Catalogo", new { plataforma = "PlayStation", genero = ViewData["FiltroGenero"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroPlataforma"] as string == "PlayStation" ? "active fw-bold" : "")"><i class="fab fa-playstation me-1"></i>PlayStation</a>
        <a href="@Url.Action("Catalogo", new { plataforma = "Xbox", genero = ViewData["FiltroGenero"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroPlataforma"] as string == "Xbox" ? "active fw-bold" : "")"><i class="fab fa-xbox me-1"></i>Xbox</a>
        <a href="@Url.Action("Catalogo", new { plataforma = "Nintendo", genero = ViewData["FiltroGenero"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroPlataforma"] as string == "Nintendo" ? "active fw-bold" : "")"><i class="fas fa-gamepad me-1"></i>Nintendo</a>
        <a href="@Url.Action("Catalogo", new { plataforma = "PC", genero = ViewData["FiltroGenero"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroPlataforma"] as string == "PC" ? "active fw-bold" : "")"><i class="fas fa-desktop me-1"></i>PC</a>
      </div>
    </div>
    <!-- Tipo de producto -->
    <div class="col-auto">
      <div class="btn-group" role="group">
        <a href="@Url.Action("Catalogo", new { tipo = "Videojuego", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroTipo"] as string == "Videojuego" ? "active fw-bold" : "")"><i class="fas fa-gamepad me-1"></i>Videojuegos</a>
        <a href="@Url.Action("Catalogo", new { tipo = "Consola", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroTipo"] as string == "Consola" ? "active fw-bold" : "")"><i class="fas fa-tv me-1"></i>Consolas</a>
        <a href="@Url.Action("Catalogo", new { tipo = "Accesorio", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroTipo"] as string == "Accesorio" ? "active fw-bold" : "")"><i class="fas fa-headphones me-1"></i>Accesorios</a>
        <a href="@Url.Action("Catalogo", new { tipo = "Coleccionable", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroTipo"] as string == "Coleccionable" ? "active fw-bold" : "")"><i class="fas fa-star me-1"></i>Coleccionables</a>
      </div>
    </div>
    <!-- Modo de juego -->
    <div class="col-auto">
      <div class="btn-group" role="group">
        <a href="@Url.Action("Catalogo", new { modo = "Un jugador", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroModo"] as string == "Un jugador" ? "active fw-bold" : "")"><i class="fas fa-user me-1"></i>Un jugador</a>
        <a href="@Url.Action("Catalogo", new { modo = "Multijugador", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroModo"] as string == "Multijugador" ? "active fw-bold" : "")"><i class="fas fa-users me-1"></i>Multijugador</a>
        <a href="@Url.Action("Catalogo", new { modo = "Cooperativo", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], clasificacion = ViewData["FiltroClasificacion"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroModo"] as string == "Cooperativo" ? "active fw-bold" : "")"><i class="fas fa-handshake me-1"></i>Cooperativo</a>
      </div>
    </div>
    <!-- Clasificación de edad -->
    <div class="col-auto">
      <div class="btn-group" role="group">
        <a href="@Url.Action("Catalogo", new { clasificacion = "E", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroClasificacion"] as string == "E" ? "active fw-bold" : "")">E</a>
        <a href="@Url.Action("Catalogo", new { clasificacion = "T", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroClasificacion"] as string == "T" ? "active fw-bold" : "")">T</a>
        <a href="@Url.Action("Catalogo", new { clasificacion = "M", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroClasificacion"] as string == "M" ? "active fw-bold" : "")">M</a>
        <a href="@Url.Action("Catalogo", new { clasificacion = "A", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], categoria = ViewData["FiltroCategoria"] })" class="btn btn-outline-light @(ViewData["FiltroClasificacion"] as string == "A" ? "active fw-bold" : "")">A</a>
      </div>
    </div>
    <!-- Categorías especiales -->
    <div class="col-auto">
      <div class="btn-group" role="group">
        <a href="@Url.Action("Catalogo", new { categoria = "Edición especial", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"] })" class="btn btn-outline-light @(ViewData["FiltroCategoria"] as string == "Edición especial" ? "active fw-bold" : "")"><i class="fas fa-crown me-1"></i>Edición especial</a>
        <a href="@Url.Action("Catalogo", new { categoria = "Colección", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"] })" class="btn btn-outline-light @(ViewData["FiltroCategoria"] as string == "Colección" ? "active fw-bold" : "")"><i class="fas fa-layer-group me-1"></i>Colección</a>
        <a href="@Url.Action("Catalogo", new { categoria = "Liquidación", genero = ViewData["FiltroGenero"], plataforma = ViewData["FiltroPlataforma"], tipo = ViewData["FiltroTipo"], modo = ViewData["FiltroModo"], clasificacion = ViewData["FiltroClasificacion"] })" class="btn btn-outline-light @(ViewData["FiltroCategoria"] as string == "Liquidación" ? "active fw-bold" : "")"><i class="fas fa-fire me-1"></i>Liquidación</a>
      </div>
    </div>
    <!-- Quitar filtros -->
    <div class="col-auto">
      <a href="@Url.Action("Catalogo")" class="btn btn-secondary ms-2"><i class="fas fa-times me-1"></i>Quitar Filtros</a>
    </div>
  </div>
</div>

<!-- CATÁLOGO GENERAL -->
<div id="catalogo" class="container mt-5">
  <h2 class="text-center mb-4">Catálogo General</h2>
  <div class="row">
    @if (!Model.Productos.Any())
    {
      <div class="col-12">
        <div class="alert alert-warning text-center mt-4" role="alert">
          <i class="fas fa-exclamation-circle me-2"></i>No se encontraron productos que coincidan con tu búsqueda o filtros.
        </div>
      </div>
    }
    else
    {
      @foreach (var producto in Model.Productos)
      {
        var tieneOfertaValida = producto.EsOferta && producto.Descuento.HasValue && producto.PrecioReal.HasValue && producto.PrecioReal > 0 && producto.Descuento > 0 && producto.Precio > 0 && producto.Precio < producto.PrecioReal && producto.OfertaFin.HasValue && producto.OfertaFin.Value > DateTime.UtcNow;
        <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
          <div class="card h-100 shadow-sm bg-white border border-2 border-primary">
            <img src="@((producto.ImagenPrincipal != null && producto.ImagenPrincipalMimeType != null) ? $"data:{producto.ImagenPrincipalMimeType};base64,{Convert.ToBase64String(producto.ImagenPrincipal)}" : (producto.ImagenUrl ?? "/images/no-image.png"))" class="card-img-top" alt="@producto.Nombre" style="background:#f5f5f5; object-fit:contain; max-height:220px;">
            <div class="card-body d-flex flex-column">
              <h5 class="card-title text-primary fw-bold">@producto.Nombre</h5>
              <p class="card-text text-dark truncate-description" data-fulltext="@producto.Descripcion">@producto.Descripcion</p>
              <a href="@Url.Action("Producto", "Home", new { id = producto.Id })" class="btn-leer-mas-link @(producto.Descripcion != null && producto.Descripcion.Length > 120 ? "d-inline" : "d-none")">Leer más</a>
              @if (tieneOfertaValida && producto.Descuento.HasValue && producto.PrecioReal.HasValue)
              {
                  <p class="card-text text-danger fw-bold fs-5">
                      <span>-@producto.Descuento.Value.ToString("0")% S/ @producto.Precio.ToString("0.00")</span>
                  </p>
                  <p class="card-text text-muted"><s>S/ @producto.PrecioReal.Value.ToString("0.00")</s></p>
                  <span class="badge bg-danger mb-2">Oferta</span>
              }
              else if (producto.Precio > 0)
              {
                  <p class="card-text fw-bold text-success fs-5">S/ @producto.Precio.ToString("0.00")</p>
                  @if (producto.EsOferta) { <span class="badge bg-danger mb-2">Oferta</span> }
              }
              else if (producto.PrecioReal.HasValue && producto.PrecioReal.Value > 0)
              {
                  <p class="card-text fw-bold text-success fs-5">S/ @producto.PrecioReal.Value.ToString("0.00")</p>
              }
              <button type="button" class="btn btn-primary mt-auto fw-bold btn-go-product" data-id="@producto.Id">Añadir al carrito</button>
            </div>
          </div>
        </div>
      }
    }
  </div>
</div>

<!-- Overlay para feedback de carrito -->
<div id="cart-feedback-overlay-index" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(10,10,10,0.65); z-index:2000; align-items:center; justify-content:center;"></div>

<style>
body {
  background: linear-gradient(135deg, #0f2027 0%, #2c5364 100%);
  min-height: 100vh;
  font-family: 'Orbitron', 'Montserrat', Arial, sans-serif;
}
.hero-section {
  background: linear-gradient(120deg, #232526 0%, #414345 100%);
  border-radius: 32px;
  box-shadow: 0 0 32px #00fff7a0, 0 0 0 8px #232526;
  overflow: hidden;
  position: relative;
}
.hero-section .display-4 {
  font-family: 'Orbitron', 'Montserrat', Arial, sans-serif;
  letter-spacing: 2px;
  text-shadow: 0 0 16px #00fff7, 0 2px 8px #000a;
}
.hero-bg-carousel .bg-image {
  position: absolute; top:0; left:0; width:100%; height:100%; opacity:0; transition:opacity 1s;
  background-size:cover; background-position:center; filter: blur(2px) brightness(0.7);
  z-index: 1;
}
.hero-bg-carousel .bg-image.active { opacity: 1; z-index: 2; }
.hero-section .btn-primary {
  background: linear-gradient(90deg, #00fff7 0%, #7c4dff 100%);
  border: none;
  font-weight: bold;
  box-shadow: 0 0 16px #00fff7a0;
  letter-spacing: 1px;
}
.alert-info {
  background: linear-gradient(90deg, #232526 0%, #00fff7 100%);
  color: #181a1b;
  border: none;
  font-weight: bold;
  box-shadow: 0 0 8px #00fff7a0;
}
.input-group-lg .form-control {
  background: #181a1b;
  color: #fff;
  border: 2px solid #00fff7;
  font-size: 1.2rem;
  border-radius: 16px 0 0 16px;
  box-shadow: 0 0 8px #00fff7a0;
}
.input-group-lg .btn-primary {
  background: linear-gradient(90deg, #00fff7 0%, #7c4dff 100%);
  border: none;
  font-weight: bold;
  border-radius: 0 16px 16px 0;
  box-shadow: 0 0 8px #7c4dff80;
}
.card {
  border-radius: 24px;
  background: linear-gradient(135deg, #232526 60%, #181a1b 100%);
  box-shadow: 0 0 24px #00fff7a0, 0 2px 8px #000a;
  border: 2px solid #232526;
  transition: transform 0.2s, box-shadow 0.2s;
}
.card:hover {
  transform: translateY(-8px) scale(1.03);
  box-shadow: 0 0 32px #7c4dffb0, 0 2px 16px #000a;
  border-color: #00fff7;
}
.card-title {
  color: #00fff7;
  font-family: 'Orbitron', 'Montserrat', Arial, sans-serif;
  letter-spacing: 1px;
  font-size: 1.2rem;
}
.card-title.text-danger {
  color: #ff4081 !important;
}
.card-text {
  color: #e0e0e0;
  font-size: 1.05rem;
}
.badge.bg-danger, .badge.bg-danger.mb-2 {
  background: linear-gradient(90deg, #ff4081 0%, #7c4dff 100%);
  color: #fff;
  font-weight: bold;
  box-shadow: 0 0 8px #ff408180;
  border-radius: 8px;
  font-size: 1rem;
}
.btn-leer-mas-link {
  background: none;
  border: none;
  color: #00fff7;
  padding: 0;
  font-size: 0.98rem;
  cursor: pointer;
  text-decoration: underline;
  margin-top: 2px;
  margin-bottom: 0;
  transition: color 0.2s;
}
.btn-leer-mas-link:hover {
  color: #7c4dff;
}
.btn-primary, .btn-outline-primary {
  background: linear-gradient(90deg, #00fff7 0%, #7c4dff 100%);
  border: none;
  font-weight: bold;
  letter-spacing: 1px;
  color: #181a1a;
  box-shadow: 0 0 8px #00fff7a0;
}
.btn-outline-primary {
  background: none;
  color: #00fff7;
  border: 2px solid #00fff7;
}
.btn-outline-primary:hover {
  background: linear-gradient(90deg, #00fff7 0%, #7c4dff 100%);
  color: #181a1b;
}
.btn-outline-danger {
  background: none;
  color: #ff4081;
  border: 2px solid #ff4081;
}
.btn-outline-danger:hover {
  background: linear-gradient(90deg, #ff4081 0%, #7c4dff 100%);
  color: #fff;
}
.border-primary {
  border-color: #00fff7 !important;
}
.border-danger {
  border-color: #ff4081 !important;
}
::-webkit-scrollbar {
  width: 10px;
  background: #232526;
}
::-webkit-scrollbar-thumb {
  background: linear-gradient(90deg, #00fff7 0%, #7c4dff 100%);
  border-radius: 8px;
}
.truncate-description {
  max-height: 3.5em;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}
.container, .container-fluid {
  backdrop-filter: blur(2px);
}
#catalogo .card {
  border: 2px solid #7c4dff;
}
#catalogo .card-title {
  color: #7c4dff;
}
</style>
<link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@500;700&family=Montserrat:wght@400;700&display=swap" rel="stylesheet">

<script>
  // Inicia el carrusel automáticamente
  const carousel = new bootstrap.Carousel(document.querySelector('#hero-carousel'), {
    interval: 5000,
    wrap: true
  });
</script>
<script>
// Carrusel de imágenes de fondo sincronizado con frases y duración global
(function() {
  const frases = document.querySelectorAll('#hero-carousel .carousel-item');
  const bgCarousel = document.querySelector('.hero-bg-carousel');
  const bgImages = bgCarousel ? bgCarousel.querySelectorAll('.bg-image') : [];
  let current = 0;
  let intervalId = null;
  const duracion = @duracion;
  function showSlide(idx) {
    frases.forEach((el, i) => el.classList.toggle('active', i === idx));
    if (bgImages.length > 0) {
      bgImages.forEach((el, i) => el.classList.toggle('active', i === idx));
    }
  }
  function nextSlide() {
    current = (current + 1) % frases.length;
    showSlide(current);
    clearInterval(intervalId);
    intervalId = setInterval(nextSlide, duracion);
  }
  if (frases.length > 0) {
    showSlide(current);
    intervalId = setInterval(nextSlide, duracion);
  }
})();
</script>
<script>
document.querySelectorAll('.btn-add-cart-index, .btn-go-product').forEach(function(btn) {
    btn.onclick = function() {
        const prodId = btn.getAttribute('data-id');
        window.location.href = '/Home/Producto/' + prodId;
    };
});
</script>
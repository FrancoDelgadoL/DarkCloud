@model DarkCloud.Models.Producto
@using Microsoft.AspNetCore.Identity
@using DarkCloud.Models
@inject SignInManager<Usuario> SignInManager
@{
    ViewData["Title"] = Model.Nombre;
    // Galería: ahora puede tener varias imágenes (base64 o url)
    var imagenes = ViewBag.ImagenesGaleria as List<string>;
    if (imagenes == null || !imagenes.Any())
    {
        if (Model.ImagenPrincipal != null && Model.ImagenPrincipalMimeType != null)
        {
            var base64 = Convert.ToBase64String(Model.ImagenPrincipal);
            var mime = Model.ImagenPrincipalMimeType;
            imagenes = new List<string> { $"data:{mime};base64,{base64}" };
        }
        else
        {
            imagenes = new List<string> { Model.ImagenUrl ?? "/images/no-image.png" };
        }
    }
    var ahora = DateTime.UtcNow;
    bool ofertaActiva = Model.EsOferta && Model.Descuento.HasValue && Model.PrecioReal.HasValue && Model.PrecioReal > 0 && Model.Descuento > 0 && Model.Precio > 0 && Model.Precio < Model.PrecioReal && Model.OfertaFin.HasValue && Model.OfertaFin.Value > ahora;
}
<div class="container my-5">
    <div class="row justify-content-center align-items-center g-5">
        <!-- Galería de imágenes -->
        <div class="col-lg-5 col-md-6 text-center">
            <div class="bg-white rounded-4 shadow p-4 mb-4 border border-2 border-primary neon-card">
                <div id="main-image-container" class="mb-3">
                    <img id="main-image" src="@imagenes[0]" alt="@Model.Nombre" class="img-fluid rounded-3 border border-secondary" style="max-width: 350px; max-height: 350px; object-fit: contain; background: #f5f5f5; cursor: zoom-in; transition: box-shadow 0.2s;">
                </div>
                <div class="d-flex justify-content-center gap-2">
                    @for (int i = 0; i < imagenes.Count; i++) {
                        <img src="@imagenes[i]" class="img-thumbnail border-2 galeria-miniatura" style="width: 60px; height: 60px; object-fit: cover; background: #f5f5f5; border:2px solid #2196f3;" onclick="document.getElementById('main-image').src='@imagenes[i]'">
                    }
                </div>
            </div>
        </div>
        <!-- Detalle y compra -->
        <div class="col-lg-5 col-md-6">
            <div class="bg-white rounded-4 shadow p-4 border border-2 border-primary neon-card">
                <h2 class="mb-3 fw-bold text-primary" style="font-family:'Orbitron',sans-serif; letter-spacing:1px;">@Model.Nombre</h2>
                @if (ofertaActiva && Model.Descuento.HasValue && Model.PrecioReal.HasValue)
                {
                    <p class="fs-3 text-danger fw-bold mb-1">S/ @Model.Precio <span class="badge bg-danger ms-2">-@Model.Descuento.Value.ToString("0")%</span></p>
                    <p class="text-muted mb-1"><s>S/ @Model.PrecioReal.Value.ToString("0.00")</s></p>
                }
                else if (Model.Precio > 0)
                {
                    <p class="fs-3 text-success fw-bold mb-1">S/ @Model.Precio</p>
                    @if (Model.EsOferta) { <span class="badge bg-danger ms-2">Oferta</span> }
                }
                else if (Model.PrecioReal.HasValue && Model.PrecioReal.Value > 0)
                {
                    <p class="fs-3 text-success fw-bold mb-1">S/ @Model.PrecioReal.Value.ToString("0.00")</p>
                }
                <p class="text-dark mb-3" style="font-size:1.1rem; font-family:'Montserrat',sans-serif;">@Model.Descripcion</p>
                <!-- Ficha técnica -->
                <div class="mb-4">
                    <h5 class="fw-bold text-primary mb-2" style="font-family:'Orbitron',sans-serif;">Ficha técnica</h5>
                    <table class="table table-bordered rounded-3 overflow-hidden" style="font-size:1rem; background:#f8f9fa;">
                        <tbody>
                            <tr><td class="fw-bold text-primary">Género</td><td class="text-dark">@Model.Genero</td></tr>
                            <tr><td class="fw-bold text-primary">Plataforma</td><td class="text-dark">@Model.Plataforma</td></tr>
                            <tr><td class="fw-bold text-primary">Tipo</td><td class="text-dark">@Model.TipoProducto</td></tr>
                            <tr><td class="fw-bold text-primary">Modo</td><td class="text-dark">@Model.ModoJuego</td></tr>
                            <tr><td class="fw-bold text-primary">Clasificación</td><td class="text-dark">@Model.ClasificacionEdad</td></tr>
                        </tbody>
                    </table>
                </div>
                <form id="form-add-cart" method="post" action="/Carrito/AddToCart" class="mb-0">
                    <input type="hidden" name="productoId" value="@Model.Id" />
                    <div class="mb-4 d-flex align-items-center justify-content-center gap-3">
                        <label for="cantidad" class="form-label mb-0 fw-bold text-primary">Cantidad</label>
                        <div class="input-group flex-nowrap" style="width: 140px;">
                            <button type="button" class="btn btn-outline-primary btn-sm fw-bold" id="btn-restar" tabindex="-1" style="font-size:1.3rem;">-</button>
                            <input type="number" name="cantidad" id="cantidad" class="form-control text-center fw-bold bg-white text-primary border border-primary" value="1" min="1" max="10" style="font-size:1.3rem; border-radius:0; appearance: none; -webkit-appearance: none; -moz-appearance: textfield;" autocomplete="off">
                            <button type="button" class="btn btn-outline-primary btn-sm fw-bold" id="btn-sumar" tabindex="-1" style="font-size:1.3rem;">+</button>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-lg btn-primary w-100 fw-bold shadow-sm" style="font-size:1.2rem; letter-spacing:1px;">Añadir al carrito <i class="fas fa-cart-plus ms-2"></i></button>
                </form>
                <div id="cart-feedback" class="mt-4 d-flex flex-column align-items-center justify-content-center"></div>
            </div>
        </div>
    </div>
    <!-- Overlay para feedback -->
    <div id="cart-feedback-overlay" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(10,10,10,0.65); z-index:2000; align-items:center; justify-content:center;"></div>
</div>
<style>
.neon-card {
  border-radius: 18px;
  box-shadow: 0 0 16px #7c4dff44, 0 4px 32px #0002;
  transition: box-shadow 0.2s, transform 0.2s;
}
.neon-card:hover {
  box-shadow: 0 0 32px #18ffff99, 0 8px 32px #0004;
  transform: translateY(-6px) scale(1.03);
}
.galeria-miniatura {
  border: 2px solid #2196f3;
  border-radius: 8px;
  cursor: pointer;
  transition: border 0.2s, box-shadow 0.2s;
  box-shadow: 0 0 8px #7c4dff33;
}
.galeria-miniatura.active, .galeria-miniatura:hover {
  border: 2.5px solid #00fff7;
  box-shadow: 0 0 16px #00fff799;
}
#main-image {
  transition: box-shadow 0.2s, transform 0.2s;
  cursor: zoom-in;
}
#main-image.zoomed {
  transform: scale(1.2);
  box-shadow: 0 0 32px #00fff799;
  z-index: 2001;
}
#lightbox-overlay {
  display: none;
  position: fixed;
  top: 0; left: 0; width: 100vw; height: 100vh;
  background: rgba(10,10,20,0.92);
  z-index: 3000;
  align-items: center;
  justify-content: center;
}
#lightbox-overlay.active {
  display: flex;
}
#lightbox-img {
  max-width: 90vw;
  max-height: 90vh;
  border-radius: 18px;
  box-shadow: 0 0 32px #00fff799, 0 8px 32px #7c4dff99;
}
</style>
<div id="lightbox-overlay" onclick="this.classList.remove('active')">
  <img id="lightbox-img" src="" alt="Imagen ampliada" />
</div>
<script>
(function() {
  const mainImg = document.getElementById('main-image');
  const miniaturas = document.querySelectorAll('.galeria-miniatura');
  const lightbox = document.getElementById('lightbox-overlay');
  const lightboxImg = document.getElementById('lightbox-img');
  let activeIdx = 0;
  if (miniaturas.length) {
    miniaturas[0].classList.add('active');
    miniaturas.forEach((thumb, idx) => {
      thumb.addEventListener('click', function() {
        mainImg.src = thumb.src;
        miniaturas.forEach(t => t.classList.remove('active'));
        thumb.classList.add('active');
        activeIdx = idx;
      });
    });
  }
  mainImg.addEventListener('click', function() {
    lightbox.classList.add('active');
    lightboxImg.src = mainImg.src;
  });
  lightbox.addEventListener('click', function() {
    lightbox.classList.remove('active');
    lightboxImg.src = '';
  });
})();
</script>

@section Scripts {
<script>
// Todo el código JS debe ir dentro de <script> para evitar que Razor lo interprete
// y debe usarse correctamente la interpolación de Razor para los datos del modelo

(function() {
  function safeBindCantidadBtns() {
    var btnRestar = document.getElementById('btn-restar');
    var btnSumar = document.getElementById('btn-sumar');
    var inputCantidad = document.getElementById('cantidad');
    if (!btnRestar || !btnSumar || !inputCantidad) return;
    btnRestar.onclick = function() {
      var val = parseInt(inputCantidad.value) || 1;
      if(val > 1) inputCantidad.value = val - 1;
    };
    btnSumar.onclick = function() {
      var val = parseInt(inputCantidad.value) || 1;
      if(val < 10) inputCantidad.value = val + 1;
    };
  }
  document.addEventListener('DOMContentLoaded', function() {
    safeBindCantidadBtns();
    var feedbackOverlay = document.getElementById('cart-feedback-overlay');
    var formAddCart = document.getElementById('form-add-cart');
    if (!formAddCart) return;
    formAddCart.onsubmit = async function(e) {
      e.preventDefault();
      var form = e.target;
      var data = new URLSearchParams(new FormData(form));
      var res, json;
      try {
        res = await fetch(form.action, {
          method: 'POST',
          body: data,
          headers: { 'X-Requested-With': 'XMLHttpRequest' }
        });
        var contentType = res.headers.get('content-type');
        if (contentType && contentType.indexOf('application/json') !== -1) {
          json = await res.json();
        } else {
          throw new Error('Respuesta inesperada del servidor.');
        }
      } catch (err) {
        feedbackOverlay.style.display = 'flex';
        feedbackOverlay.innerHTML = "<div class='bg-danger text-white p-4 rounded-4 shadow-lg text-center fade show' style='font-size:1.1rem; min-width:320px; max-width:90vw;'>Ocurrió un error inesperado. Intenta iniciar sesión nuevamente.<br><a href='/Account/Login?returnUrl=" + encodeURIComponent(window.location.pathname) + "' class='btn btn-primary btn-lg mt-4 fw-bold shadow'>Iniciar sesión</a></div>";
        feedbackOverlay.onclick = function(ev) {
          if(ev.target === feedbackOverlay) { feedbackOverlay.style.display = 'none'; feedbackOverlay.innerHTML = ''; }
        };
        return;
      }
      if (json.loginRequired) {
        feedbackOverlay.style.display = 'flex';
        feedbackOverlay.innerHTML = "<div class='bg-danger text-white p-4 rounded-4 shadow-lg text-center fade show' style='font-size:1.1rem; min-width:320px; max-width:90vw;'>" +
          "<i class='fas fa-exclamation-triangle fa-2x mb-2 text-warning'></i><br>Primero debes iniciar sesión como cliente para poder añadir productos al carrito.<br><a href='/Account/Login?returnUrl=" + encodeURIComponent(window.location.pathname) + "' class='btn btn-primary btn-lg mt-4 fw-bold shadow'>Iniciar sesión</a>" +
        "</div>";
        feedbackOverlay.onclick = function(ev) {
          if(ev.target === feedbackOverlay) { feedbackOverlay.style.display = 'none'; feedbackOverlay.innerHTML = ''; }
        };
        return;
      }
      if (json.success) {
        feedbackOverlay.style.display = 'flex';
        feedbackOverlay.innerHTML = "<div class='bg-dark text-white p-4 rounded-4 shadow-lg text-center fade show' style='font-size:1.1rem; min-width:320px; max-width:90vw;'>" +
          "<i class='fas fa-check-circle fa-2x mb-2 text-success'></i><br>Tu producto se ha añadido al carrito de compras." +
          "<div class='d-flex gap-3 justify-content-center mt-4'>" +
            "<a href='/Carrito' class='btn btn-primary btn-lg fw-bold shadow'>Ir a pagar</a>" +
            "<button id='seguir-viendo' class='btn btn-outline-light btn-lg fw-bold shadow'>Seguir viendo productos</button>" +
          "</div>" +
        "</div>";
        document.getElementById('seguir-viendo').onclick = function() {
          feedbackOverlay.style.display = 'none';
          feedbackOverlay.innerHTML = '';
        };
        feedbackOverlay.onclick = function(ev) {
          if(ev.target === feedbackOverlay) { feedbackOverlay.style.display = 'none'; feedbackOverlay.innerHTML = ''; }
        };
        return;
      }
      feedbackOverlay.style.display = 'flex';
      feedbackOverlay.innerHTML = "<div class='bg-danger text-white p-4 rounded-4 shadow-lg text-center fade show' style='font-size:1.1rem; min-width:320px; max-width:90vw;'>" + (json.message || 'Error al añadir al carrito.') + "</div>";
      feedbackOverlay.onclick = function(ev) {
        if(ev.target === feedbackOverlay) { feedbackOverlay.style.display = 'none'; feedbackOverlay.innerHTML = ''; }
      };
    };
  });
})();
</script>
}
